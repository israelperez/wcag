/*			Media Queries
*********************************/

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 544px, md: 768px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 544px, md: 768px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md))
//    md
@function breakpoint-next($name, $breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 544px, md: 768px))
//    544px
@function breakpoint-min($name, $breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 544px, md: 768px))
//    767px
@function breakpoint-max($name, $breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints) {
  @include media-breakpoint-up($name, $breakpoints) {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints) {
  @include media-breakpoint-up($lower, $breakpoints) {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// $breakpoint-m: "760px";
// $breakpoint-l: "1030px";
// $breakpoint-xl: "1200px";
// $breakpoint-xxl: "1800px";
//
// $screen: "only screen";
//
// $mobile-only: "#{$screen} and (max-width: #{$breakpoint-m})";
//
// $tablet-up: "#{$screen} and (min-width: #{$breakpoint-m})"; // IE8: screen and (min-width: #{$breakpoint-m})
// $tablet-down: "#{$screen} and (max-width: #{$breakpoint-l})";
// $tablet-only: "#{$screen} and (min-width: #{$breakpoint-m}) and (max-width: #{$breakpoint-l})";
//
// $desktop-up: "#{$screen} and (min-width: #{$breakpoint-l})";
// $desktop-down: "#{$screen} and (max-width: #{$breakpoint-xl})";
// $desktop-only: "#{$screen} and (min-width: #{$breakpoint-l}) and (max-width: #{$breakpoint-xl})";
//
// $desktop-large-up: "#{$screen} and (min-width: #{$breakpoint-xl})";
// $desktop-large-down: "#{$screen} and (max-width: #{$breakpoint-xxl})";
// $desktop-large-only: "#{$screen} and (min-width: #{$breakpoint-xl}) and (max-width: #{$breakpoint-xxl})";
//
// $desktop-xlarge-up: "#{$screen} and (min-width: #{$breakpoint-xxl})";
// $desktop-xlarge-down: "#{$screen} and (max-width: #{$breakpoint-xxl})";

// $retina: (
//   "#{$screen} and (-webkit-min-device-pixel-ratio: 2)",
//   "#{$screen} and (min--moz-device-pixel-ratio: 2)",
//   "#{$screen} and (-o-min-device-pixel-ratio: 2/1)",
//   "#{$screen} and (min-device-pixel-ratio: 2)",
//   "#{$screen} and (min-resolution: 192dpi)",
//   "#{$screen} and (min-resolution: 2dppx)"
// );

//$print: 'print';
//$tablet__with-print: "(min-width: #{$breakpoint-m})";

@include media-breakpoint-up(mobile) {
	body{
		background-color: green;
	}
}
@include media-breakpoint-up(tablet) {
	body{
		background-color: blue;
	}
}
